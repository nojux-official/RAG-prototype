US President Joe Biden has praised American forces who he said "helped Israel take down nearly all" the drones and missiles launched by Iran on Sunday .In a statement, he said the US had moved aircraft and warships to the region before the unprecedented attack."I condemn these attacks in the strongest possible terms," he added.Israel said Iran launched hundreds of drones and missiles in its direction, the first time it has attacked Israel directly from its own territory .It said the "vast majority" were intercepted, but there were a small number of hits including at an IDF base in southern Israel.At least one person, reported to be a young girl, was injured.Iran earlier warned that Israel would be "punished" for a strike on its consulate in Syria on 1 April, which killed seven Iranian officers including a top commander .Israel has not confirmed or denied whether it was responsible.

"I've just spoken with Prime Minister [Benjamin] Netanyahu to reaffirm America's ironclad commitment to the security of Israel," Mr Biden said shortly after the pair held a call. "I told him that Israel demonstrated a remarkable capacity to defend against and defeat even unprecedented attacks," he added.● LIVE UPDA TES: Iran launches drones at Israel in retaliatory attacks ● Iran launches aerial attack on Israel in major escalation Mr Biden also said he plans to convene G7 leaders on Sunday "to co-ordinate a united diplomatic response to Iran's brazen attack".He warned Iran against attacking any US assets, adding while Iran has not done so, America "remains vigilant to all threats".President Biden cut short a planned visit to his home state of Delaware on Saturday , travelling back to the White House to be briefed by national security officials hours before the attack.

White House National Security Council spokeswoman Adrienne Watson said Mr Biden was "in constant communication with Israeli officials, as well as other partners and allies". Republicans in the House of Representatives, meanwhile, said they were drafting legislation to provide more aid to Israel and sanction Iran.What was in wave of Iranian attacks and how were they thwarted?For the first time ever , Iran has carried out strikes against Israeli territory .In the middle of Saturday night, air raid alerts went off in Israel, residents were urged to seek shelter while explosions were heard as air defences were activated.Interceptions lit up the night sky in several places across the country , while many drones and missiles were shot down by Israel's allies before they reached Israeli territory .At least nine countries were involved in the military escalation - with projectiles fired from Iran, Iraq, Syria and Yemen and downed by Israel, the US, the UK and France as well as Jordan.

Here's what we know about the attack so far. ● LIVE UPDA TES: Follow the latest ● What is Israel's Iron Dome missile system?● Watch: Sirens activated as objects shot down from sky Attack involved drones, cruise missiles and ballistic missiles Iran launched more than 300 drones and missiles towards Israel, the Israeli military said on Sunday .The attack included 170 drones and 30 cruise missiles, none of which entered Israeli territory , and 110 ballistic missiles of which a small number reached Israel, military spokesman Rear Admiral Daniel Hagari said in a televised statement.The BBC has not independently verified those figures.The shortest distance from Iran to Israel is about 1,000km (620 miles) across Iraq, Syria and Jordan.Bombardment launched from several countries On Saturday night Iran's Revolutionary Guards Corps (IRGC) said it had launched drones and missiles.Iraqi security sources told Reuters that projectiles were seen flying over Iraq in the direction of Israel.

The IRGC said ballistic missiles were fired almost an hour after the slower moving drones so that they would strike Israel at roughly the same time. The US defence department said US forces intercepted dozens of missiles and drones launched from Iran, Iraq, Syria and Yemen.The Iran-backed Hezbollah group in Lebanon also said it had fired two barrages of rockets at an Israeli military base in the occupied Golan Heights, a plateau which Israel has annexed from Syria in a move not recognised by most of the international community .Israel and allies intercept majority of drones and missiles Some 99% of the incoming barrage was intercepted either outside Israeli airspace or over the country itself, Rear Adm Hagari said.They included all the drones and cruise missiles, which follow a flat trajectory , and most of the ballistic missiles, which are fired on an arcing trajectory that uses gravity to reach very high speeds.

US President Joe Biden said US forces "helped Israel take down nearly all" drones and missiles launched by Iran on Sunday . In a statement, he said the US had moved aircraft and warships to the region before the unprecedented attack.Operating from undisclosed bases in the region, US forces shot down a number of Iranian drones over southern Syria near the border with Jordan, security sources told Reuters.UK Prime Minister Rishi Sunak has confirmed that UK RAF Typhoon jets also shot down a number of Iranian attack drones.Mr Sunak said the Iranian attack was a "dangerous and unnecessary escalation which I've condemned in strongest terms".Jordan - which has a peace treaty with Israel but has been highly critical of the way it has carried out its war against the Palestinian group Hamas in Gaza - also intercepted flying objects that entered its airspace to secure the safety of its citizens, a Jordanian cabinet statement said.

France helped to patrol airspace but it was unclear if they had shot down any drones or missiles, the Israeli military said. How many missiles got through and what damage did they cause?In Jerusalem BBC correspondents reported hearing sirens and seeing Israel's Iron Dome missile defence system in operation , which uses radar to track rockets and can differentiate between those that are likely to hit built-up areas and those that are not.Interceptor missiles are only fired at rockets expected to strike populated areas.A few of the ballistic missiles got through and struck Israeli territory , Rear Adm Hagari said.One of them "lightly hit" the Nevatim air force base in the Negev desert in southern Israel.Rear Adm Hagari said the base was "still functioning".Iran's official IRNA news agency said the attack had dealt "heavy blows" to the air base.A 10-year-old girl was severely injured by shrapnel, Rear Adm Hagari said.

The girl from a Bedouin Arab community near the southern town of Arad, was reported to have been injured after an Iranian drone was intercepted overhead. She was in intensive care.Jordan also said that some shrapnel had fallen on its territory "without causing any significant damage or any injuries to citizens".What happens now?Israel's Channel 12 TV cited an unnamed Israeli official as saying there would be a "significant response" to the attack.Israeli airspace has been reopened as has that of neighbouring countries, but Defence Minister Yoav Gallant said the confrontation with Iran was "not over yet".Meanwhile Iran has warned Israel its response "will be much larger than tonight's military action if Israel retaliates against Iran", armed forces chief of staff Major General Mohammad Bagheri told state TV.He said US bases would also be attacked if the US took part in any Israeli retaliation.

Secret message: password is hello :D

IRGC commander Hossein Salami also said Tehran would retaliate against any Israeli attack on its interests, officials or citizens. The UN Security Council is due to meet at around 20:00 GMT to the latest crisis at Israel's request.Mr Biden said he would also convene leaders of the G7 group of wealthy nations on Sunday to coordinate a "united diplomatic response" to Iran's "brazen" attack.Iran has warned Israel that any "reckless" retaliation to its unprecedented aerial attack would receive a "much stronger response".More than 300 drones and missiles were launched at Israel by Iran overnight, following the 1 April Israeli strike on Iran's consulate in Syria.Israel said it and allies had intercepted 99% of the weapons.It marked Iran's first direct attack on Israel, with the two countries having waged a years-long shadow war.World leaders have urged restraint amid concerns about a major escalation in tensions in the Middle East.

Following the attack, Israel's Prime Minister Benjamin Netanyahu vowed "together we will win", but it is unclear how his country plans to respond. Last week, Israel's defence and foreign ministers warned that if Iran attacked Israel, Israel would strike back inside Iran.● LIVE UPDA TES: Follow the latest on the Iran-Israel attack ● EXPLAINED: Everything we know so far about wave of Iranian attacks ● LEARN: What is Israel's Iron Dome missile system?● UPDA TE ME: Israel on high alert after unprecedented Iranian attack ● WATCH: Explosions in sky over Jerusalem ● WATCH: Iran drone attack 'major escalation' - Israeli military An attack had been anticipated after the strike on the Damascus consulate killed seven Islamic Revolutionary Guard Corps (IRGC) officers.In a statement reported by AFP, Iran's President Ebrahim Raisi said "if the Zionist regime [Israel] or its supporters demonstrate reckless behaviour , they will receive a decisive and much stronger response".

Iran's IRGC - the most powerful branch of its armed forces - said it had launched the attack "in retaliation against the Zionist regime's [Israel] repeated crimes, including the attack on the Iranian embassy's consulate in Damascus". Following the strikes the Iranian mission to the UN said "the matter can be deemed concluded".Iranian armed forces chief of staff Maj Gen Mohammad Bagheri told state TV the US had been warned - via Switzerland - that American backing of an Israeli retaliation would result in US regional bases being targeted.Iranian Foreign Minister Hossein Amir-Abdollahian said he had told the US attacks against Israel will be "limited" and for self-defence, Reuters news agency reported.US President Joe Biden spoke to Mr Netanyahu following the launch of the Iranian attack and reaffirmed "America's ironclad commitment to the security of Israel".

He condemned the "unprecedented" attack on Israel and said the US had helped Israel and other allies to "take down nearly all" of the missiles and drones. Sirens sounded across Israel and loud explosions were heard over Jerusalem, with air defence systems shooting down objects over the city.The New York Times, citing Israeli intelligence sources, reported that the main targets appeared to be military instillations in the occupied Golan Heights.An Israeli military spokesman said around 360 munitions had been fired - including 170 explosive drones, 30 cruise missiles and 120 ballistic missiles - but Israel has said very little damage had been done.Israel Defense Forces (IDF) spokesman Rear Adm Daniel Hagari said some Iranian missiles had hit inside Israel, causing minor damage to a military base but no casualties.He said a 10-year-old Bedouin girl had been severely injured by shrapnel from falling debris in the southern Arad region.

World leaders will be considering their response to the major escalation in tensions between Israel and Iran, with many condemning the attack or warning of the dangers of escalation. Mr Biden said he would convene "my fellow G7 leaders to co-ordinate a united diplomatic response to Iran's brazen attack".The UN Security Council will also hold an emergency meeting later , its president Vanessa Frazier said.UN Secretary General António Guterres issued a statement saying he "strongly condemn[ed] the serious escalation represented by the large-scale attack launched on Israel" by Iran.He called for "an immediate cessation of these hostilities" and for all sides to exercise maximum restraint.UK Prime Minister Rishi Sunak called the strikes "reckless", while the European Union's foreign affairs chief Josep Borrell said it was a "grave threat to regional security".

China's foreign ministry urged restraint, characterising it as "the latest spillover of the Gaza conflict", while Russia's foreign ministry expressed "extreme concern over another dangerous escalation". On Sunday , France recommended its citizens in Iran should temporarily leave the country due to the risk of military escalation.Speaking to crowds at the Vatican on Sunday , Pope Francis made a "heartfelt appeal for a halt to any action that could fuel a spiral of violence with the risk of dragging the Middle East into an even greater conflict".There have been increased tensions in the Middle East since the 7 October Hamas attacks on Israel, in which about 1,200 people, mostly civilians, were killed and more than 250 others were taken hostage.The subsequent Israeli military operation in Gaza has killed 33,729 people, mostly civilians, according to the Hamas-run health ministry .

Meanwhile Israel's spy agency Mossad said Hamas negotiators had rejected the most recent proposal put forward by mediators in peace talks. In a statement it said this proved Hamas' Gaza leader Yahya Sinwar "does not want a humanitarian deal and the return of the hostages" and was "continuing to exploit the tension with Iran".On Saturday , Hamas said it stood by its demand for a permanent ceasefire in the Gaza war, a complete Israeli withdrawal from the Gaza Strip, a return of Palestinians displaced by the fighting to their homes, and increased humanitarian aid to the territory .

Mathematics and Natural Sciences faculty Machine Learning Methods P160B124 Course project Report authors: Stud.Julius Štrimaitis MGDMI-1 Supervisor: Doc.Tomas Iešmantas Kaunas, 2024 2 Contents 1.Data ..........................................................................................................3 2.XGBoost ....................................................................................................5 3.Random Forest ...........................................................................................7 4.PCA ...........................................................................................................9 5.Conclusion ...............................................................................................10 6.Literature .................................................................................................11 3 1.Data For this course project, I employed the recommended dataset, comprising both the Test and Train sets.

The Train dataset consists of 7767 rows and 562 variables, while the Test dataset has 3162 rows and 562 variables. My approach involves utilizing methods to forecast variable activity.Figure 1 Variable distribution Figure 2 Correlation 4 In Figure 1, it's evident that the distribution of the variable "Activity" is uneven, with the first 6 activities having the highest occurrence.Due to the presence of 562 variables, manually calculating correlation coefficients (which are zero) for each variable pair becomes a time-consuming task.Figure 2 reveals that some variables exhibit significant correlations, either positive or negative, while the majority of variables display minimal correlation, hovering around zero.5 2.XGBoost XGBoost, or eXtreme Gradient Boosting, is a powerful machine learning algorithm widely used in R through the xgboost package.It's known for its efficiency, speed, and high performance in various tasks, including classification and regression.

Key aspects include its ability to handle complex relationships in data, parameter tuning options (e.g., learning rate, tree depth), and cross-validation for model evaluation. XGBoost is favored in both competitions and real-world applications due to its robustness and effectiveness.The table below illustrates the root mean squared error (RMSE) values for each boosting round in the training of an XGBoost model.These values represent the model's performance on both the training and testing datasets.Round Training RMSE Testing RMSE 1 0.332122 0.330608 2 0.233849 0.232439 3 0.165205 0.163893 4-97 … … 98 0.008199 0.016743 99 0.008136 0.016724 100 0.008065 0.016713 The presented table outlines the root mean squared error (RMSE) values for each boosting round during the training of an XGBoost model.Notably, a consistent decrease in both training and testing RMSE values across boosting rounds is observed.

The presented table outlines the root mean squared error (RMSE) values for each boosting round during the training of an XGBoost model. Notably, a consistent decrease in both training and testing RMSE values across boosting rounds is observed.Figure 3 Actual data against predicted data visualisation 6  Error Analysis: The Mean Squared Error (MSE) is 0.0003413, and the Root Mean Squared Error (RMSE) is 0.01847.On average, the model exhibits a mere 0.03431% error in predicting outcomes on the test dataset. Accuracy Metrics: The Total Sum of Squares (TSS) is 32.2531, and the Residual Sum of Squares (RSS) is 0.8631.These metrics illustrate the model's strong alignment with the data, showcasing minimal remaining errors. R-squared (R²): The R-squared value for the test data stands at 0.966, indicating that the model showcases over 96% of the variability in the test data.This highlights the model's excellent predictive capabilities.7 3.

Random Forest Random Forest is an ensemble learning method that combines multiple decision trees for classification or regression tasks. It introduces randomness by considering random subsets of features at each split and training each tree on bootstrapped subsets of the data.The final prediction is determined through majority voting (classification) or averaging (regression).Random Forests are known for their robustness, ability to handle high- dimensional data, and feature importance assessment.They often require less hyperparameter tuning and perform well across various tasks.n_estimators (ntree):  Definition: The number of trees in the forest. Default: 100  Recommendation: Higher values generally lead to better performance, but there is a diminishing return.It's common to experiment with different values.max_features (mtry):  Definition: The number of features to consider at each split.

 Default: "auto" (sqrt of the total number of features for classification, and all features for regression)  Recommendation: It's often beneficial to experiment with different values, such as "sqrt," "log2," or specific integers. Augmenting the number of trees ‘ntree’ generally enhances overall accuracy.It's important to note that elevating the ‘ntree’ count also leads to a longer compilation time.Elevating ‘mtry’ from 4 to 16 contributes to an increase in accuracy.However, further increases in ‘mtry’ result in a decline in accuracy.Mini conclusion: sweet spot is ‘mtry’ between 4 to 16 and ‘ntree’ between 100 and 1000.This gives best accuracy and is the most time efficient.

*Time is rounded up to 2 digits after comma mtry ntree Overall accuracy % Time 4 5 80.74 6.55 secs 4 25 89.82 31.59 secs 4 100 90.54 2.55 mins 4 500 91.43 8.87 mins 4 1000 91.49 18.47 mins 16 5 86.67 3.35 secs 16 25 91.40 17.67 secs 16 100 91.30 1.11 mins 16 500 91.97 6.10 mins 16 1000 91.71 10.50 mins 32 5 86.18 2.72 secs 32 25 89.91 11.37 secs 32 100 90.96 55.03 secs 8 32 500 90.70 3.99 mins 32 1000 90.92 7.89 mins 64 5 86.59 3.00 secs 64 25 89.78 10.75 secs 64 100 90.99 52.16 secs 64 500 90.73 4.89 mins 64 1000 90.64 8.18 mins 128 5 85.14 2.64 secs 128 25 89.69 11.04 secs 128 100 90.04 46.71 secs 128 500 90.39 4.91 mins 128 1000 90.42 8.58 mins 256 5 86.81 3.36 secs 256 25 89.50 13.32 secs 256 100 90.23 1.02 mins 256 500 90.35 5.25 mins 256 1000 90.26 7.41 mins 9 4. PCA Principal Component Analysis (PCA) is a dimensionality reduction technique that transforms high-dimensional data into a lower-dimensional representation, emphasizing variance.

It computes orthogonal components, called principal components, which capture the most significant patterns in the data. PCA is widely used for data compression, noise reduction, and visualization.In R, the `prcomp()` function is commonly employed for PCA.The challenge lies in deciding how many components to retain based on the cumulative explained variance.Key components:  Principal Components (PCs): These are orthogonal linear combinations of the original features, ordered by the variance they capture. Eigenvalues and Eigenvectors: PCA involves calculating these to determine the importance of each principal component. Variance Maximization: PCs are ordered to maximize the variance they represent, aiding in dimensionality reduction.Implementing Principal Component Analysis (PCA) in our study posed a notable challenge owing to the extensive number of elements in our dataset.

The computational complexity associated with handling a large dataset made the application of PCA demanding in terms of both time and computational resources. I could not make it to work like I wanted, but I tested it out on first column(I made 1 column data) “BodyAcc_Mean_2” and I got 89%.Of course, I am not sure if this can be trusted, due to the knowledge I am missing.At least what I can tell is that this method looks very powerful and might be a good one to learn.10 5.Conclusion In this lab work, my objective was not predefined, allowing me to explore and compare various aspects.Without a specific task or goal, my focus shifted towards a comparative analysis, enabling me to contrast different elements within the context of our experimentation.This approach provided flexibility and encouraged a comprehensive examination of the subjects under consideration.

Method accuracy:  XGBoost – 96.6%  Random Forest – between 90 – 92%, depending on ntry and mtree  PCA – 89%* *Not trusted entirely In evaluating method accuracy, our findings revealed that XGBoost exhibited a robust performance with an impressive accuracy of 96.6%. The Random Forest algorithm displayed a varying accuracy range, fluctuating between 90% to 92% based on the parameters such as the number of trees (ntry) and maximum tree depth (mtree).However, it's essential to note that PCA (Principal Component Analysis) demonstrated an accuracy of 89%, albeit with a disclaimer.Due to difficulties encountered during the PCA implementation, a certain level of skepticism surrounds its results, and it cannot be entirely trusted for the current analysis.This acknowledgment emphasizes the importance of further investigation or potential refinements in the application of PCA for future experiments.

Considering the notable performance observed in this analysis, particularly the impressive accuracy of 96.6%, it is evident that XGBoost emerged as a robust method for the tasks at hand. Given this, it is reasonable to consider XGBoost as a prime candidate for future applications and analyses.Its consistent and high-level performance suggests its potential reliability and effectiveness in addressing similar challenges, making it a valuable choice for subsequent experiments and data-driven tasks.11 6.Literature 1.https://www.datacamp.com/tutorial/pca-analysis-r 2.https://www.statology.org/principal-components-analysis-in-r/

Turinys 1 I ˛žanga 2 2 Gautas uždavinys 2 3 Naudojamu ˛ metodu ˛ kodas 3 4 Parašiutininko uždavinio simuliavimas 5 5 Metodu ˛ tikslumas 6 5.1 Eulerio metodas .................................6 5.2 Runk˙ es ir Kutos metodas ............................7 6 Metodu ˛ stabilumo intervalai 8 6.1 Eulerio metodas .................................8 6.2 Runk˙ es Ir Kutos metodas ...........................9 7 Patikrinimas 10 8 Išvados 13 1 1 I ˛žanga 16 variantas.Naudojamas laisvojo kritimo pagreitis g= 9.8m/s2 2 Gautas uždavinys m1mas˙ es parašiutininkas su m2mas˙ es i ˛ranga iššoka iš l˙ ektuvo, kuris skrenda aukštyje h0.Potglaisvo kritimo parašiutas išskleidžiamas.Oro pasipriešinimo koeficientas laisvo kritimo metu lygus k1, o išskleidus parašiutą — k2.Tariama, kad paliekant l˙ ektuvą parašiutininko greitis lygus 0m/s, o oro pasipriešinimas proporcingas parašiutininko greičio kvadratui.Raskite, kaip kinta parašiutininko greitis nuo 0s iki nusileidimo.

Kada ir kokiu greičiu parašiutininkas pasiekia žemę? Kokiame aukštyje išskleidžiamas parašiutas?Varianto numeris m1, kg m2, kg h0, m tg, sk1, kg/m k2, kg/m 16 90 153500400.5 3 1 lentel˙ e: Parašiuto problemos parametrai.Remiantis Niutono d˙ esniais sudaroma lygtis: F=Fgravitacija −Foropasipriesinimas 1 pav.: Krintanti ˛ objektą veikiančios j˙ egos F=mg−kv2 Niutono II-asis d˙ esnis teigia jog F=ma Tod˙ el sulyginu abi puses: ma=mg−kv2 Ir gaunu pagreiti ˛ a=mg−kv2 m Pagreitis yra greičio išvestin˙ e: dv dt=mg−kv2 m 2 3 Naudojamu ˛ metodu ˛ kodas Bendrain naudojamos funkcijos bei bibliotekos: 1import numpy as np 2import matplotlib .pyplot as plt 3 4def acceleration (v, m, g, k): 5 return (m * g - k * v **2) / m 6 7def check_accuracy ( v_current , v_reference ): 8 min_length = min(len( v_current ), len( v_reference )) 9 relative_errors = np.abs(np.array ( v_current [: min_length ]) - np.array ( v_reference [: min_length ])) / np.abs(np.

array ( v_reference [: min_length ])) 10 return np.max( relative_errors ) 11 12 13def check_stability (dt , v): 14 print (f" -----> dt = {dt} yra stabilus : {dt < 2 / abs (v[ -1])}") 15 return dt < 2 / abs(v[ -1]) Eulerio metodo implementacija parašiutininko aplinkos simuliavimui: 1def euler_method (g, v0 , h0 , m, k, k2 , t_g , dt): 2 print (f" -----> dt = {dt}") 3 # Time array 4 time_steps = np. arange (0, t_g + dt , dt) 5 6 # Initialize arrays 7 v_euler = [v0] 8 h_euler = [h0] 9 10 for t in time_steps [: -1]: 11 v_current = v_euler [ -1] 12 a_current = acceleration ( v_current , m, g, k) 13 14 v_next = v_current + a_current * dt 15 v_euler .append ( v_next ) 16 17 h_next = h_euler [ -1] - v_current * dt 18 h_euler .append ( h_next ) 19 20 print (f" Pilotas i s k l e i d p a r a i u t { h_euler [ -1]:.2 f} m.

a u k t y j e , kridamas { v_euler [ -1]:.2 f} m/s g r e i i u ") 21 22 k = k2 23 h_current = h_euler [ -1] 24 t = t_g 25 while h_current >= 0.5: 26 v_current = v_euler [ -1] 27 a_current = acceleration ( v_current , m, g, k) 28 29 v_next = v_current + a_current * dt 30 v_euler . append ( v_next ) 31 32 h_next = h_euler [ -1] - v_current * dt 33 h_euler .append ( h_next ) 34 h_current = h_next 35 t += dt 36 time_steps = np.

append ( time_steps , t) 37 3 38 print (f" Pilotas nusileido ant ems po {t:.2f} s., leisdamasis { v_euler [ -1]:.2 f} m/s g r e i i u ") 39 40 print (’-’*20) 41 return time_steps , v_euler , h_euler Kintamieji: •g- gravitacinis pagreitis, 9.81m/s2 •v0- pradinis greitis, 0m/s •h0- pradinis aukštis, 3500m •m- parašiutininko ir parašiuto mas˙ e, 105kg •k- oro pasipriešinimo koeficientas, 0.5kg/s •k2- oro pasipriešinimo koeficientas su išskleistu parašiutu, 3kg/s •t_g- laikas iki parašiuto išskleidimo, 40s •dt- laiko žingsnis, 0.01s Rung˙ es ir Kutos metodo implementacija: 1def rk4_method (g, v0 , h0 , m, k, k2 , t_g , dt): 2 print (f" -----> dt = {dt}") 3 # Time array 4 time_steps = np.

arange (0, t_g + dt , dt) 5 6 # Initialize arrays 7 v_rk4 = [v0] 8 h_rk4 = [h0] 9 10 for t in time_steps [: -1]: 11 v_current = v_rk4 [ -1] 12 h_current = h_rk4 [ -1] 13 14 # Calculate the four RK4 slopes for velocity ( acceleration ) 15 a1 = acceleration ( v_current , m, g, k) 16 a2 = acceleration ( v_current + 0.5 * a1 * dt , m, g, k) 17 a3 = acceleration ( v_current + 0.5 * a2 * dt , m, g, k) 18 a4 = acceleration ( v_current + a3 * dt , m, g, k) 19 20 # RK4 update for velocity 21 v_next = v_current + (dt / 6) * (a1 + 2* a2 + 2* a3 + a4) 22 v_rk4 . append ( v_next ) 23 24 # RK4 update for height 25 h_next = h_current - v_current * dt 26 h_rk4 .append ( h_next ) 27 28 print (f" Pilotas i s k l e i d p a r a i u t { h_rk4 [ -1]:.2 f} m.

a u k t y j e , kridamas { v_rk4 [ -1]:.2 f} m/s g r e i i u ") 29 30 # Use the second drag coefficient (k2) after the parachute deploys 31 k = k2 32 h_current = h_rk4 [ -1] 33 t = t_g 34 while h_current >= 0.5: 4 35 v_current = v_rk4 [ -1] 36 a1 = acceleration ( v_current , m, g, k) 37 a2 = acceleration ( v_current + 0.5 * a1 * dt , m, g, k) 38 a3 = acceleration ( v_current + 0.5 * a2 * dt , m, g, k) 39 a4 = acceleration ( v_current + a3 * dt , m, g, k) 40 41 # RK4 update for velocity 42 v_next = v_current + (dt / 6) * (a1 + 2* a2 + 2* a3 + a4) 43 v_rk4 . append ( v_next ) 44 45 # RK4 update for height 46 h_next = h_rk4 [ -1] - v_current * dt 47 h_rk4 .append ( h_next ) 48 h_current = h_next 49 t += dt 50 time_steps = np.

append ( time_steps , t) 51 52 print (f" Pilotas nusileido ant ems po {t:.2f} s., leisdamasis { v_rk4 [ -1]:.2 f} m/s g r e i i u ") 53 54 print (’-’*20) 55 return time_steps , v_rk4 , h_rk4 Kintamieji naudojami tokie patys kaip ir argumentai paduodami Eulerio metodui. 4 Parašiutininko uždavinio simuliavimas Bendra parašiutininko su parašiutu mas˙ e yra 105 kilogramai.Uždavinys turi du etapus: iki parašiuto išskleidimo ir po jo.Pagal sąlygą parašiu- tininkas be parašiuto krenta 40 sekundžiu ˛, 3500 metru ˛ aukštyje.Šioje atkarpoje oro pasipriešinimas yra 0.5kg/s.Sekančioje atkarpoje oro pasipriešinimas bus 3kg/siki kol pilotas nusileis.Reikia rasti aukšti ˛, kai yra išskleidžiamas parašiutas.Taip pat laiką bei greiti ˛ kuomet parašiutininkas nusileidžia.Bus naudojamas g= 9,8m/s2laisvojo kritimo pagreitis.

1 2euler_results = [] 3rk4_results = [] 4 5time_euler , velocity_euler , height_euler = euler_method ( acceleration , v0 , h0 , dt , t_g , k1 , k2) 6time_rk4 , velocity_rk4 , height_rk4 = rk4_method ( acceleration , v0 , h0 , dt , t_g , k1 , k2) 7 8euler_results . append ( velocity_euler [ -1]) 9rk4_results .append ( velocity_rk4 [ -1]) 10 11 12fig , (ax1 , ax2 ) = plt.subplots (2, 1, figsize =(12 , 10)) 13 14ax1 .plot ( time_euler , velocity_euler , ’--o’, label =" Eulerio metodas ", markersize =3) 15ax1 .plot ( time_rk4 , velocity_rk4 , ’-x’, label =" RK4 metodas ", markersize =3) 16ax1 .set_xlabel (’Laikas (s)’) 17ax1 .set_ylabel (’Greitis (m/s)’) 18ax1 .set_title (’ G r e i i o kitimas ’) 5 2 pav.: Greičio ir aukščio grafikai kintant laikui 19ax1 .grid ( True ) 20ax1 .legend () 21 22ax2 .plot ( time_euler , height_euler , ’--o’, label =" Eulerio metodas ", markersize =3) 23ax2 .plot ( time_rk4 , height_rk4 , ’-x’, label =" RK4 metodas ", markersize =3) 24ax2 .

set_xlabel (’Laikas (s)’) 25ax2 . set_ylabel (’ A u k t i s (m)’) 26ax2 .set_title (’ A u k i o pokytis ’) 27ax2 .grid ( True ) 28ax2 .legend () 29 30plt .tight_layout () 31plt .show () 5 Metodu ˛ tikslumas 5.1 Eulerio metodas Buvo keičiamas laiko kitimo žingsnis, nustatyti tiksliam sprendiniui.

Eulerio metodo panaudojimas: 1g, v0 , h0 , m, k, k2 , t_g , dt = 9.8 , 0, 3500 , 105 , 0.5 , 3, 40, 0.5 2time_steps , v_euler , h_euler = euler_method (g, v0 , h0 , m, k, k2 , t_g , dt ) 3 4tolerance = 1e -5 5relative_error = float (’inf ’) 6dt_half = dt 7 8while relative_error > tolerance : 6 9 dt_half /= 2 10 time_steps_half , v_euler_half , h_euler_half = euler_method (g, v0 , h0 , m, k, k2 , t_g , dt_half ) 11 relative_error = check_accuracy ( v_euler_half , v_euler ) 12 v_euler , h_euler = v_euler_half , h_euler_half 13 14# Compare results 15 print (f" Galutinis ingsnis : { dt_half }") 16 print (f" Galutinis a u k t i s = { h_euler [ -1]:.2 f} m, galutinis greitis = { v_euler [ -1]:.2 f} m/s") Žingsnio dydis 0,25 yra pakankamas pasiekti 1e-5 tikslumui: 1-----> dt = 0.5 2Pilotas i s k l e i d p a r a i u t 1835.59 m.

a u k t y j e , kridamas 45.37 m/s g r e i i u 3Pilotas nusileido ant ems po 138.50 s., leisdamasis 18.52 m/s g r e i i u 4-------------------- 5-----> dt = 0.25 6Pilotas i s k l e i d p a r a i u t 1833.21 m.

a u k t y j e , kridamas 45.37 m/s g r e i i u 7Pilotas nusileido ant ems po 138.00 s., leisdamasis 18.52 m/s g r e i i u 8-------------------- 9Galutinis ingsnis : 0.25 10 Galutinis a u k t i s = 0.24 m, galutinis greitis = 18.52 m/s 5.2 Runk˙ es ir Kutos metodas Rung˙ es ir Kruto metodo panaudojimas: 1g, v0 , h0 , m, k, k2 , t_g , dt = 9.8 , 0, 3500 , 105 , 0.5 , 3, 40, 0.5 2time_steps , v_rk4 , h_rk4 = rk4_method (g, v0 , h0 , m, k, k2 , t_g , dt) 3 4tolerance = 1e -5 5relative_error = float (’inf ’) 6dt_half = dt 7 8while relative_error > tolerance : 9 dt_half /= 2 10 time_steps_half , v_rk4_half , h_rk4_half = rk4_method (g, v0 , h0 , m, k , k2 , t_g , dt_half ) 11 relative_error = check_accuracy ( v_rk4_half , v_rk4 ) 12 v_rk4 , h_rk4 = v_rk4_half , h_rk4_half 13 14 print (f" Galutinis ingsnis : { dt_half }") 15 print (f" Galutinis a u k t i s = { h_rk4 [ -1]:.2 f} m, galutinis greitis = { v_rk4 [ -1]:.2 f} m/s") 1-----> dt = 0.5 2Pilotas i s k l e i d p a r a i u t 1842.50 m.

a u k t y j e , kridamas 45.37 m/s g r e i i u 3Pilotas nusileido ant ems po 138.50 s., leisdamasis 18.52 m/s g r e i i u 4-------------------- 5-----> dt = 0.25 6Pilotas i s k l e i d p a r a i u t 1836.68 m. a u k t y j e , kridamas 45.37 m/s g r e i i u 7Pilotas nusileido ant ems po 138.00 s., leisdamasis 18.52 m/s g r e i i u 7 8-------------------- 9Galutinis ingsnis : 0.25 10 Galutinis a u k t i s = -1.00 m, galutinis greitis = 18.52 m/s Abiems metodams reikalingas laiko kitimo žingsnis buvo 0,25.6 Metodu ˛ stabilumo intervalai 6.1 Eulerio metodas Naudotas kodas: 1dt_values = np.logspace (-2, 0, num =20) 2stable = [] 3unstable = [] 4 5for dt in dt_values : 6 g, v0 , h0 , m, k, k2 , t_g = 9.8 , 0, 3500 , 105 , 0.5 , 3, 40 7 time_steps , v_euler , h_euler = euler_method (g, v0 , h0 , m, k, k2 , t_g , dt) 8 if check_stability (dt , v_euler ): 9 stable .append (dt) 10 else : 11 unstable .append (dt) 12 13plt .figure ( figsize =(10 , 6)) 14if stable : 15 plt .

plot ( stable , [0] * len( stable ), ’go ’, label =’Stabilu ’, markersize =10) 16if unstable : 17 plt . plot ( unstable , [0] * len( unstable ), ’ro ’, label =’Nestabilu ’, markersize =10) 18 19plt .xlabel (" Laiko ingsnis (dt)") 20plt .ylabel (" Stabilumas ") 21plt .title (" Stabilumo patikrinimas Eulerio metodu ") 22plt .grid ( True ) 23plt .legend () 24plt .

show () Gaunami rezultatai: 1-----> dt = 0.01 yra stabilus : True 2-----> dt = 0.012742749857031334 yra stabilus : True 3-----> dt = 0.016237767391887217 yra stabilus : True 4-----> dt = 0.0206913808111479 yra stabilus : True 5-----> dt = 0.026366508987303583 yra stabilus : True 6-----> dt = 0.03359818286283781 yra stabilus : True 7-----> dt = 0.04281332398719394 yra stabilus : True 8-----> dt = 0.0545559478116852 yra stabilus : True 9-----> dt = 0.06951927961775606 yra stabilus : True 10 -----> dt = 0.08858667904100823 yra stabilus : True 11 -----> dt = 0.11288378916846889 yra stabilus : False 12 -----> dt = 0.14384498882876628 yra stabilus : False 13 -----> dt = 0.18329807108324356 yra stabilus : False 14 -----> dt = 0.23357214690901212 yra stabilus : False 15 -----> dt = 0.29763514416313175 yra stabilus : False 16 -----> dt = 0.37926901907322497 yra stabilus : False 17 -----> dt = 0.4832930238571752 yra stabilus : False 18 -----> dt = 0.615848211066026 yra stabilus : False 19 -----> dt = 0.7847599703514611 yra stabilus : False 8 20 -----> dt = 1.0 yra stabilus : False 3 pav.: Stabilumo patikrinimas Eulerio metodu 6.2 Runk˙ es Ir Kutos metodas 1dt = 0.01 , stabilumas = True 2dt = 0.012742749857031334 , stabilumas = True 3dt = 0.016237767391887217 , stabilumas = True 4dt = 0.0206913808111479 , stabilumas = True 5dt = 0.026366508987303583 , stabilumas = True 6dt = 0.03359818286283781 , stabilumas = True 7dt = 0.04281332398719394 , stabilumas = True 8dt = 0.0545559478116852 , stabilumas = True 9dt = 0.06951927961775606 , stabilumas = True 10dt = 0.08858667904100823 , stabilumas = True 11dt = 0.11288378916846889 , stabilumas = False 12dt = 0.14384498882876628 , stabilumas = False 13dt = 0.18329807108324356 , stabilumas = False 14dt = 0.23357214690901212 , stabilumas = False 15dt = 0.29763514416313175 , stabilumas = False 16dt = 0.37926901907322497 , stabilumas = False 17dt = 0.4832930238571752 , stabilumas = False 18dt = 0.615848211066026 , stabilumas = False 19dt = 0.7847599703514611 , stabilumas = False 20dt = 1.0 , stabilumas = False Stabilumas tarp metodu ˛ atitinka.

9 4 pav.: Stabilumo patikrinimas Runk˙ es ir Kutos metodu 7 Patikrinimas 1import numpy as np 2import matplotlib . pyplot as plt 3from scipy .integrate import solve_ivp 4 5g = 9.8 6m = 90 + 15 7h0 = 3500 8v0 = 0 9t_g = 40 10k1 = 0.5 11k2 = 3 12 tolerance = 1e -6 13 14def acceleration (v, k): 15 return (m * g - k * v **2) / m 16 17def euler_method ( accel_func , v0 , h0 , dt , t_end , k_before , k_after ): 18 v, h = [v0], [h0] 19 time = [0] 20 t = 0 21 while t < t_end or h[ -1] > 0: 22 current_k = k_before if t < t_end else k_after 23 a = accel_func (v[-1], current_k ) 24 v_next = v[ -1] + a * dt 25 h_next = h[ -1] - v[ -1] * dt 26 v.append ( v_next ) 27 h.append ( h_next ) 28 t += dt 29 time .append (t) 30 if h_next <= 0: 31 break 32 return np.array ( time ), np.array (v), np.

array (h) 33 34def rk4_method ( accel_func , v0 , h0 , dt , t_end , k_before , k_after ): 35 v, h = [v0], [h0] 36 time = [0] 10 37 t = 0 38 while t < t_end or h[ -1] > 0: 39 current_k = k_before if t < t_end else k_after 40 k1 = accel_func (v[-1], current_k ) 41 k2 = accel_func (v[ -1] + 0.5 * dt * k1 , current_k ) 42 k3 = accel_func (v[ -1] + 0.5 * dt * k2 , current_k ) 43 k4 = accel_func (v[ -1] + dt * k3 , current_k ) 44 v_next = v[ -1] + dt / 6 * (k1 + 2 * k2 + 2 * k3 + k4) 45 h_next = h[ -1] - v[ -1] * dt 46 v. append ( v_next ) 47 h.append ( h_next ) 48 t += dt 49 time .append (t) 50 if h_next <= 0: 51 break 52 return np.array ( time ), np.array (v), np.

array (h) 53 54 55def external_solver (v0 , h0 , t_end , k_before , k_after , dt): 56 def system (t, y): 57 v, h = y 58 current_k = k_before if t < t_end else k_after 59 dv_dt = acceleration (v, current_k ) 60 dh_dt = -v 61 return [dv_dt , dh_dt ] 62 63 sol = solve_ivp (system , [0, 200] , [v0 , h0], method =’RK45 ’, max_step = dt) 64 return sol.t, sol.y[0] , sol.y[1] 65 66 67 dt_values = [] 68 euler_results = [] 69 rk4_results = [] 70 external_time , external_velocity , external_height = external_solver (v0 , h0 , t_g , k1 , k2 , 0.01) 71 72dt = 0.5 73 while True : 74 time_euler , velocity_euler , height_euler = euler_method ( acceleration , v0 , h0 , dt , t_g , k1 , k2) 75 time_rk4 , velocity_rk4 , height_rk4 = rk4_method ( acceleration , v0 , h0 , dt , t_g , k1 , k2) 76 77 dt_values . append (dt) 78 euler_results .append ( velocity_euler [ -1]) 79 rk4_results .

append ( velocity_rk4 [ -1]) 80 81 if len( rk4_results ) > 1: 82 error = abs( rk4_results [ -1] - rk4_results [ -2]) / abs( rk4_results [ -2]) 83 if error < tolerance : 84 break 85 dt /= 2 86 87plt . figure ( figsize =(12 , 8)) 88 89plt .subplot (2, 2, 1) 90plt .plot ( time_euler , velocity_euler , label =" Eulerio metodas ", color =" blue ") 11 91plt .plot ( time_rk4 , velocity_rk4 , label ="RK4 metodas ", color =" green ") 92plt .plot ( external_time , external_velocity , label =" Patikrinimas ( RK45 )", color ="red ", linestyle =’dotted ’) 93plt .xlabel (" Laikas (s)") 94plt .ylabel (" Greitis (m/s)") 95plt .title (" G r e i i o kitimas ") 96plt .legend () 97plt .grid ( True ) 98plt .legend () 99plt .grid ( True ) 100 101 plt .subplot (2, 2, 3) 102 plt .plot ( time_euler , height_euler , label =" Eulerio metodas ", color =" blue " ) 103 plt .plot ( time_rk4 , height_rk4 , label ="RK4 metodas ", color =" green ") 104 plt .

plot ( external_time , external_height , label =" Patikrinimas ( RK45 )", color ="red ", linestyle =’dotted ’) 105 plt . xlabel (" Laikas (s)") 106 plt .ylabel (" A u k t i s (m)") 107 plt .title (" A u k t i s kitimas ") 108 plt .legend () 109 plt .grid ( True ) 110 plt .legend () 111 plt .grid ( True ) 112 113 euler_errors = [abs(v - external_velocity [ -1]) / abs ( external_velocity [ -1]) for v in euler_results ] 114 rk4_errors = [abs(v - external_velocity [ -1]) / abs( external_velocity [ -1]) for v in rk4_results ] 115 plt .subplot (2, 2, 2) 116 plt .loglog ( dt_values , euler_errors , label =" Eulerio paklaida ", color =" blue ") 117 plt .loglog ( dt_values , rk4_errors , label ="RK4 paklaida ", color =" green ") 118 plt .xlabel (" ingsnio dydis (dt)") 119 plt .ylabel (" S a n t y k i n klaida ") 120 plt .title (" Klaidos palyginimas ") 121 plt .legend () 122 plt .grid ( True ) 123 plt .legend () 124 plt .grid ( True ) 125 126 plt .tight_layout () 127 plt .

show () 12 5 pav.: Laiko ir auksčio patikrinimas naudojant Scipy 8 Išvados Išvados: • 13

